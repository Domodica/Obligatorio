/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistaMozo;

import controlador.ControladorMozo;
import controlador.VistaMozo;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import modelo.Mesa;
import modelo.Mozo;
import vista.InicioAppJDialog;

/**
 *
 * @author docenteFI
 */
public class PanelPalMozoEstatico extends javax.swing.JPanel implements ActionListener, VistaMozo {

    /**
     * Creates new form PanelPalMozoEstatico
     */
    private PanelMesas panelMesas;
    private ControladorMozo controlador;
    private InfoMesaPanel panelInfo;

    public PanelPalMozoEstatico(PanelMesas pm, Mozo mozo, InfoMesaPanel pi) {
        initComponents();
        panelMesas = pm;
        pm.setEscuchador(this);
        panelInfo = pi;
        pi.setEscuchador(this);
        controlador = new ControladorMozo(this, mozo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMesaSel = new javax.swing.JLabel();
        abrirMesa = new javax.swing.JButton();
        btnSalirSistema = new javax.swing.JButton();
        verServicio = new javax.swing.JButton();

        setLayout(null);

        lblMesaSel.setText("Mesa seleccionada:");
        add(lblMesaSel);
        lblMesaSel.setBounds(30, 20, 170, 40);

        abrirMesa.setText("ABRIR MESA");
        abrirMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirMesaActionPerformed(evt);
            }
        });
        add(abrirMesa);
        abrirMesa.setBounds(70, 70, 120, 40);

        btnSalirSistema.setText("SALIR del sistema");
        btnSalirSistema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirSistemaActionPerformed(evt);
            }
        });
        add(btnSalirSistema);
        btnSalirSistema.setBounds(450, 10, 130, 30);

        verServicio.setText("VER SERVICIO");
        verServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verServicioActionPerformed(evt);
            }
        });
        add(verServicio);
        verServicio.setBounds(70, 130, 120, 40);
    }// </editor-fold>//GEN-END:initComponents

    private void abrirMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirMesaActionPerformed
        abrirMesa();
    }//GEN-LAST:event_abrirMesaActionPerformed

    private void verServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verServicioActionPerformed
        verServicio();
    }//GEN-LAST:event_verServicioActionPerformed

    private void btnSalirSistemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirSistemaActionPerformed

    }//GEN-LAST:event_btnSalirSistemaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abrirMesa;
    private javax.swing.JButton btnSalirSistema;
    private javax.swing.JLabel lblMesaSel;
    private javax.swing.JButton verServicio;
    // End of variables declaration//GEN-END:variables

    public void abrirMesa() {
        controlador.abrir();
    }

    public void cerrarMesa() {
        controlador.cerrar();
    }

    /*este merenjunje de aca me suena raro*/
    @Override
    public void actionPerformed(ActionEvent e) {
        switch (e.getActionCommand()) {
            case "AGREGAR ITEM":
                agregarNuevoItem();
                break;
            case "TRANSFERIR MESA":
                transferirMesa();
                break;
            case "CERRAR MESA":
                cerrarMesa();
                break;
            default:
                BotonMesa b = (BotonMesa) e.getSource();
                controlador.seleccionar(b.getMesa());
                break;
        }
    }
 /*no me quedo claro si todo lo que hace el controlador tiene que estar en la interface vista*/
    @Override
    public void mostrarNumeroMesaSeleccionada(int numero) {
        lblMesaSel.setText("Mesa seleccionada: " + numero);
    }

    @Override
    public void mostrarMesas(ArrayList<Mesa> mesas) {
        panelMesas.mostrar(mesas, 5);
    }

    @Override
    public void agregarItem() {
        AgregarItemJDialog nuevo = new AgregarItemJDialog(this.controlador);
        nuevo.setVisible(true);
    }

    @Override
    public void transferirMesa() {
        TransferirAMozoJDialog nueva = new TransferirAMozoJDialog(this.controlador);
        nueva.setVisible(true);
    }

    @Override
    public void verServicioMesa(Mesa seleccionada) {
        panelInfo.mostrarServicios(seleccionada);
    }

    @Override
    public void notificarTransferencia(Mozo mozo, Mozo mozoDestino, Mesa seleccionada) {
        System.out.println("//// QUEDE ACA!!! "
                + "ABRIR JDIALOG SOLO AL MOZO DESTINO " + mozoDestino + " notificando que la inicio el mozo " + mozo
                + ", nro de mesa " + seleccionada.getNumero() + ", abierta?: " + seleccionada.getAbierta());

    }

    @Override
    public void error(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "Error en aplicacion mozo", JOptionPane.ERROR_MESSAGE);
    }

    private void verServicio() {
        controlador.verServicio();
    }

    private void agregarNuevoItem() {
        controlador.agregarNuevoItem();
    }

    @Override
    public void mostarListaArticulos() {
        
    }

    @Override
    public void mostrarListaServicioMesa(Mesa seleccionada) {
        panelInfo.mostrarServicios(seleccionada);
    }

    @Override
    public void notificarTransferencia(Mozo mozo, Mozo mozoDestino) {
       TransferenciaOkJDialog nuevo = new TransferenciaOkJDialog(this.controlador); ///////////// Este tiene que abrirse solo al Mozo destino
        nuevo.setVisible(true);
    }

}
